{"version":3,"sources":["components/Todo/Controls/Controls.js","components/Todo/Lists/Items/Items.js","components/Todo/Lists/Lists.js","components/UI/Icons/Empty.js","containers/Todo/Todo.js","containers/Todo/Todo.module.css","components/Todo/Controls/Controls.module.css","components/Todo/Lists/Lists.module.css","components/Todo/Lists/Items/Items.module.css","assets/img/empty.svg"],"names":["connect","state","todos","todo","props","completed","filter","item","checked","className","classes","Controls","length","JSON","parse","localStorage","getItem","results","full_name","onSubmit","submited","type","placeholder","value","inputValue","onChange","changed","Items","itemClasses","Checked","onClick","clicked","title","deleted","Lists","TransitionGroup","component","map","CSSTransition","key","id","classNames","timeout","onChecklist","onDeletedTodo","Empty","style","display","justifyContent","alignItems","height","flexDirection","src","Icon","width","alt","text","Todo","onChecklistHandler","onCheckedToggle","onDeleteHandler","onDeleteTodo","onSaveTodoHandler","event","preventDefault","trim","onCreateTodo","setState","onChangeHandler","target","this","onFetchTodo","listTodo","Component","auth","loading","dispatch","actions","module","exports"],"mappings":"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","file":"static/js/3.9e1d1aae.chunk.js","sourcesContent":["import React from 'react';\nimport classes from './Controls.module.css';\nimport { connect } from 'react-redux';\n\nconst Controls = (props) => {\n    let completed = props.todos.filter(item => item.checked);\n\n    return (\n        <div className={classes.Controls}>\n            \n            <h2>My Day</h2>\n            \n            <h5>{completed.length} / {props.todos.length} <br/>Lists </h5>\n            <div className=\"clearfix\"></div>\n            <p>Hallo, { JSON.parse(localStorage.getItem('user')).results.full_name }  </p>\n            <form onSubmit={props.submited}>\n                <input type=\"text\" placeholder=\"Enter List\" value={props.inputValue} onChange={props.changed} />\n                <button type=\"submit\"> ADD </button>\n                <div className=\"clearfix\"></div>\n            </form>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        todos: state.todo.todos \n    }\n}\n\nexport default connect(mapStateToProps)(Controls);\n","import React from 'react';\nimport classes from './Items.module.css';\n\nconst Items = (props) => {\n    let itemClasses = null;\n\n    if(props.checked){\n        itemClasses = classes.Checked\n    }\n\n    return (\n        <li className={itemClasses}>\n            <div onClick={props.clicked}>{props.title}</div> \n            <span onClick={props.deleted}>x</span> \n        </li>\n    )\n}\n\nexport default Items\n","import React from 'react';\nimport classes from './Lists.module.css';\nimport Items from './Items/Items';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport TransitionGroup from 'react-transition-group/TransitionGroup';\n\nconst Lists = (props) => {\n\n    return (\n        <TransitionGroup component=\"ul\" className={classes.Lists}>\n            {\n                props.todos.length > 0 ? props.todos.map(todo => (\n                    <CSSTransition \n                        key={todo.id}\n                        classNames=\"fade\"\n                        timeout={500}\n                        >\n                        <Items \n                            title={todo.title} \n                            checked={todo.checked} \n                            clicked={() => props.onChecklist(todo.id)} \n                            deleted={() => props.onDeletedTodo(todo.id)} />\n                    </CSSTransition>\n                )) : null\n            }\n        </TransitionGroup>\n    )\n}\n\nexport default Lists\n","import React from 'react';\nimport Icon from './../../../assets/img/empty.svg';\n\nconst Empty = (props) => {\n    return (\n        <div style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '300px',\n            flexDirection: 'column'\n        }}>\n        <img src={Icon} width=\"150\" alt={props.text} />\n        <p>{props.text}</p>\n        </div>\n    );\n};\n\nexport default Empty;","import React , { Component } from 'react';\nimport classes from './Todo.module.css';\nimport { connect } from 'react-redux'\nimport Controls from '../../components/Todo/Controls/Controls';\nimport Lists from '../../components/Todo/Lists/Lists';\nimport * as actions from './../../store/actions/index';\nimport Empty from '../../components/UI/Icons/Empty';\n\n\nclass Todo extends Component {\n    \n    state = {\n        value: ''\n    }\n\n    componentDidMount() {\n        this.props.onFetchTodo()\n       \n    }\n\n    onChecklistHandler = (id) => {\n        this.props.onCheckedToggle( id )\n    }\n\n    onDeleteHandler = ( id ) => {\n        this.props.onDeleteTodo(id);\n    }\n\n    onSaveTodoHandler = (event) => {\n        event.preventDefault();\n        let inputValue = this.state.value.trim();\n        \n        if(inputValue !== \"\") {\n            this.props.onCreateTodo(inputValue)\n            this.setState({\n                value: ''\n            })\n        }\n\n\n        return false;\n    }\n\n    onChangeHandler = (event) => {\n        this.setState({\n            value: event.target.value\n        });\n    }\n\n    render(){\n        let listTodo = null;\n\n        if(this.props.todos.length > 0) {\n            listTodo = (\n                <Lists \n                    todos={this.props.todos} \n                    onChecklist={this.onChecklistHandler} \n                    onDeletedTodo={this.onDeleteHandler} />\n            );\n        }else {\n            listTodo = <Empty text=\"Today List Empty\" />\n        }\n\n\n        return (\n            <div className={classes.Todo}>\n                <Controls \n                    submited={this.onSaveTodoHandler} \n                    inputValue={this.state.value}\n                    changed={this.onChangeHandler} />\n                <div>\n                     {listTodo}\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        auth: state.auth,\n        todos: state.todo.todos,\n        loading: state.todo.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchTodo: () => dispatch( actions.todo_fetch( ) ) ,\n        onDeleteTodo: ( id ) => dispatch( actions.todo_delete( id ) ),\n        onCreateTodo: (title) => dispatch( actions.todo_add(title) ),\n        onCheckedToggle: (id) => dispatch( actions.todo_checked(id))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo) ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Todo\":\"Todo_Todo__3tqSC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Controls\":\"Controls_Controls__1fKts\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Lists\":\"Lists_Lists__3wWSc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Checked\":\"Items_Checked__1gXfg\"};","module.exports = __webpack_public_path__ + \"static/media/empty.4652bf9d.svg\";"],"sourceRoot":""}
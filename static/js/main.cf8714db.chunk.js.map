{"version":3,"sources":["store/actions/types.js","services/axios-service.js","services/auth-header.js","components/UI/Spinner/Spinner.js","services/auth_service.js","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/Input/Input.module.css","store/actions/auth.js","services/user-service.js","store/actions/todo.js","components/UI/ErrorMessage/ErrorMessage.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/UI/Button/Button.module.css","components/UI/ErrorMessage/ErrorMessage.js","containers/Auth/Login/Login.js","components/UI/Button/Button.js","components/UI/Input/Input.js","components/Logo/Logo.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","hoc/Layout/Layout.module.css","containers/Auth/Login/Login.module.css","components/UI/Spinner/Spinner.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Logo/Logo.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","App.js","serviceWorker.js","store/reducers/auth.js","store/reducers/todo.js","index.js"],"names":["CHECK_AUTH","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","LOGOUT_START","LOGOUT_SUCCESS","LOGOUT_FAIL","TODO_FETCH_START","TODO_FETCH_SUCCESS","TODO_FETCH_FAIL","TODO_DELETE_START","TODO_DELETE_SUCCESS","TODO_DELETE_FAIL","TODO_ADD_START","TODO_ADD_SUCCESS","TODO_ADD_FAIL","TODO_CHECKED_START","TODO_CHECKED_SUCCESS","TODO_CHECKED_FAIL","instance","Axios","create","baseURL","authHeader","user","JSON","parse","localStorage","getItem","token","Authorization","Spinner","className","classes","AuthService","email","password","post","headers","full_name","then","res","catch","err","console","log","get","module","exports","authSuccess","data","type","actionTypes","logoutSuccess","removeItem","auth","dispatch","authService","login","setItem","stringify","results","error","authCheckStatus","verify","logout","logoutFail","id","delete","title","todo_fetch","userService","getTodos","todo_delete","deleteTodo","todo_delete_success","todo_add","newTodo","todo_checked","checkedToggle","todo_checked_success","ErrorMessage","props","messageClasses","messageType","Error","Success","Messaage","children","Login","state","form_data","elementType","elementConfig","placeholder","autoFocus","label","value","validation","required","isEmail","valid","touched","formIsValid","loading","errorMessage","onCheckValidity","rules","isValid","trim","onChangeHandler","event","inputIdentifier","updatedFormData","selectedFormElement","target","key","setState","onSubmitHandler","preventDefault","onAuthentication","formElementArr","this","push","config","form","onSubmit","map","item","invalid","shouldValidate","changed","style","textAlign","disabled","btnType","message","Component","connect","actions","withRouter","Button","join","onClick","clicked","Input","inputElement","inputClasses","InputElement","Invalid","onChange","Label","color","NavigationItem","exact","to","link","activeClassName","active","NavigationItems","isLogin","Logo","DrawerToggle","Toolbar","toggleHandler","isShowSideDrawer","DesktopOnly","Backdrop","show","SideDrawer","sideDrawerClasses","Close","open","Open","Fragment","closed","marginTop","Layout","sideDrawerCloseHandler","sideDrawerToggleHandler","prevState","Content","AsyncTodo","lazy","AsyncLogout","AsyncRegister","checkAuth","check","useCallback","useEffect","routes","path","component","render","fallback","Boolean","window","location","hostname","match","initialState","currentUser","reducer","action","getCurrentUser","todos","checked","updatedTodo","filter","el","todoIndex","findIndex","copyTodos","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","todo","todoReducer","store","createStore","applyMiddleware","thunk","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf8714db.chunk.js","sourcesContent":["export const CHECK_AUTH = 'CHECK_AUTH';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\n\nexport const LOGOUT_START = 'LOGOUT_START';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL';\n\nexport const TODO_FETCH_START = 'TODO_FETCH_START';\nexport const TODO_FETCH_SUCCESS = 'TODO_FETCH_SUCCESS';\nexport const TODO_FETCH_FAIL = 'TODO_FETCH_FAIL';\n\nexport const TODO_DELETE_START = 'TODO_DELETE_START';\nexport const TODO_DELETE_SUCCESS = 'TODO_DELETE_SUCCESS';\nexport const TODO_DELETE_FAIL = 'TODO_DELETE_FAIL';\n\nexport const TODO_ADD_START = 'TODO_ADD_START';\nexport const TODO_ADD_SUCCESS = 'TODO_ADD_SUCCESS';\nexport const TODO_ADD_FAIL = 'TODO_ADD_FAIL';\n\nexport const TODO_CHECKED_START = 'TODO_CHECKED_START';\nexport const TODO_CHECKED_SUCCESS = 'TODO_CHECKED_SUCCESS';\nexport const TODO_CHECKED_FAIL = 'TODO_CHECKED_FAIL';","import Axios from 'axios';\n\nconst instance = Axios.create({\n    baseURL: process.env.NODE_ENV === 'development' ? 'http://localhost:8000/api' : 'https://resource-api.alfarisilab.com/api'\n});\n\nexport default instance;","export default function authHeader() {\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    if(user && user.token){\n        return { Authorization: 'Bearer '+user.token }\n    }else{\n        return { }\n    }\n\n}","import React from 'react';\nimport classes from './Spinner.module.css';\n\nconst Spinner = () => {\n    return (\n        <div className={classes.Spinner}></div>\n    )\n}\n\nexport default Spinner;\n","import Axios from './axios-service';\nimport authHeader from './auth-header';\n\nclass AuthService {\n\n    login(email, password){\n        return Axios.post('/login', { email, password });\n    }\n\n    logout(){\n        return Axios.post(`/logout`, {}, { headers: authHeader() })\n    }\n    \n    register({ full_name, email, password }) {\n        return Axios\n                .post(`/register`, {\n                    full_name,\n                    email,\n                    password\n                })\n                .then(res => {\n                    return res\n                })\n                .catch(err => {\n                    console.log(err)\n                })\n    }\n\n    verify(){\n        return Axios.get('/verify', { headers: authHeader() } )\n    }\n\n    getCurrentUser() {\n        return JSON.parse( localStorage.getItem('user') )\n    }\n\n}\n\nexport default new AuthService();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","import * as actionTypes from './types';\nimport authService from './../../services/auth_service';\n\nexport const authCheckState = () => {\n    return {\n        type: actionTypes.CHECK_AUTH\n    }\n}\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = (data) => {\n    const token = JSON.parse(localStorage.getItem('user')).token \n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        data: data,\n        token: token\n    }\n}\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logoutStart = () => {\n    return {\n        type: actionTypes.LOGOUT_START\n    }\n}\n\nexport const logoutSuccess = ( ) => {\n    localStorage.removeItem('user');\n    return {\n        type: actionTypes.LOGOUT_SUCCESS\n    }\n}\n\nexport const logoutFail = (err) => {\n    localStorage.removeItem('user');\n    return {\n        type: actionTypes.LOGOUT_FAIL,\n        error: err\n    }\n}\n\nexport const auth = (email, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        authService.login(email, password)\n                   .then(res => {\n                        localStorage.setItem('user', JSON.stringify(res.data));\n                        dispatch(authSuccess(res.data.results))\n                   })\n                   .catch(err => {\n                        dispatch(authFail(err))\n                   })\n    }\n}\n\nexport const authCheckStatus = () => {\n    return dispatch => {\n        dispatch( authCheckState() )\n        const user = localStorage.getItem('user');\n        if(user){\n            authService.verify()\n                       .then(res => {\n                           dispatch( authSuccess(res.data.results) )\n                       })\n                       .catch(err => {\n                           dispatch( logoutSuccess() )\n                       })\n        }\n    }\n}\n\nexport const logout = () => {\n    return dispatch => {\n        dispatch(logoutStart());\n        authService.logout()\n                .then(res => {\n                    dispatch(logoutSuccess())\n                })\n                .catch(err => {\n                    dispatch(logoutFail(err))\n                })\n    }\n}\n\n","import Axios from './axios-service';\nimport authHeader from './auth-header';\n\nclass UserService {\n    getTodos(){\n        return Axios.get('/todo', { headers: authHeader() });\n    }\n\n    deleteTodo(id){\n        return Axios.delete('/todo/' + id , { headers: authHeader() })\n    }\n\n    newTodo(title){\n        return Axios.post('/todo', {\n            title: title\n        }, { headers: authHeader() })\n    }\n\n    checkedToggle(id){\n        return Axios.get('/toggle_checked/' + id , { headers: authHeader() })\n    }\n}\n\nexport default new UserService();\n\n\n\n","import * as actionTypes from './types';\nimport userService from './../../services/user-service';\n\nexport const todo_fetch_start = () => {\n    return {\n        type: actionTypes.TODO_FETCH_START\n    }\n}\n\nexport const todo_fetch_success = ( data ) => {\n    return {\n        type: actionTypes.TODO_FETCH_SUCCESS,\n        data: data\n    }\n}\n\nexport const todo_fetch_fail = (error) => {\n    return {\n        type: actionTypes.TODO_FETCH_FAIL,\n        error: error\n    }\n}\n\nexport const todo_delete_start = () => {\n    return {\n        type: actionTypes.TODO_DELETE_START\n    }\n}\n\nexport const todo_delete_success = (id) => {\n    return {\n        type: actionTypes.TODO_DELETE_SUCCESS,\n        id: id \n    }\n}\n\nexport const todo_delete_fail = (error) => {\n    return {\n        type: actionTypes.TODO_DELETE_FAIL,\n        error: error\n    }\n}\n\n//add\nexport const todo_add_start = () => {\n    return {\n        type: actionTypes.TODO_ADD_START\n    }\n}\n\nexport const todo_add_success = (data) => {\n    return {\n        type: actionTypes.TODO_ADD_SUCCESS,\n        data: data \n    }\n}\n\nexport const todo_add_fail = (error) => {\n    return {\n        type: actionTypes.TODO_ADD_FAIL,\n        error: error\n    }\n}\n//\n\n\n//Checked\nexport const todo_checked_start = () => {\n    return {\n        type: actionTypes.TODO_CHECKED_START\n    }\n}\n\nexport const todo_checked_success = ( id ) => {\n    return {\n        type: actionTypes.TODO_CHECKED_SUCCESS,\n        id: id\n    }\n}\n\nexport const todo_checked_fail = ( error ) => {\n    return {\n        type: actionTypes.TODO_CHECKED_FAIL,\n        error: error\n    }\n}\n\nexport const todo_fetch = () => {\n    return dispatch => {\n        dispatch( todo_fetch_start() );\n        userService.getTodos()\n                    .then(res => {\n                        dispatch( todo_fetch_success(res.data.results) )\n                    })\n                    .catch(err => {\n                        dispatch( todo_fetch_fail(err) )\n                    })\n    }\n}\n\nexport const todo_delete = (id) => {\n    return dispatch => {\n        dispatch( todo_delete_start() );\n        userService.deleteTodo(id)\n                   .then(res => {\n                       dispatch( todo_delete_success(id));\n                   })\n                   .catch(err => {\n                       dispatch( todo_delete_fail(err) )\n                   });\n    }\n}\n\nexport const todo_add = ( title ) => {\n    return dispatch => {\n        dispatch( todo_add_start() )\n        userService.newTodo(title)\n                   .then(res => {\n                       dispatch( todo_add_success(res.data.results) )\n                   })\n                   .catch(err => {\n                       dispatch( todo_add_fail(err))\n                   })\n    }\n}\n\nexport const todo_checked = ( id ) => {\n    \n    return dispatch => {\n        dispatch( todo_checked_start() )\n        userService.checkedToggle(id)\n                   .then(res => {\n                        dispatch( todo_checked_success(id) )\n                   })\n                   .catch(err => {\n                       dispatch( todo_checked_fail(err) )\n                   })\n    }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Messaage\":\"ErrorMessage_Messaage__345HG\",\"Error\":\"ErrorMessage_Error__O0bqz\",\"Success\":\"ErrorMessage_Success__3KVLX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Primary\":\"Button_Primary__38CGK\",\"enable\":\"Button_enable__1Clcb\"};","import React from 'react';\nimport classes from './ErrorMessage.module.css';\n\nconst ErrorMessage = (props) => {\n    let messageClasses = null;\n\n    if(props.messageType === 'error'){\n        messageClasses = classes.Error\n    }\n\n    if(props.messageType === 'success'){\n        messageClasses = classes.Success;\n    }\n\n\n    return (\n        <div className={classes.Messaage} >\n            <span className={messageClasses}> {props.children} </span>\n        </div>\n    )\n}\n\nexport default ErrorMessage\n","import React , { Component } from 'react';\nimport classes from './Login.module.css';\nimport Button from '../../../components/UI/Button/Button';\nimport Input from '../../../components/UI/Input/Input';\nimport Spinner from './../../../components/UI/Spinner/Spinner';\nimport { withRouter } from 'react-router-dom'\nimport ErrorMessage from '../../../components/UI/ErrorMessage/ErrorMessage';\nimport { connect } from 'react-redux';\nimport * as actions from './../../../store/actions/index';\n\nclass Login extends Component {\n\n    state = {\n        form_data: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Enter email',\n                    autoFocus: true\n                },\n                label: 'Email',\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            password:{\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Enter password'\n                },\n                label: 'Password',\n                value: '',\n                validation: {\n                    required: true \n                },\n                valid: false,\n                touched: false\n            }           \n        },\n        formIsValid: false,\n        loading: false,\n        errorMessage: ''\n    }\n\n    onCheckValidity = (value, rules) => {\n        let isValid = true;\n\n        if(rules.required) {\n            isValid = value.trim() !== '' && isValid\n        }\n\n        return isValid;\n    }\n\n    onChangeHandler = (event, inputIdentifier) => {\n        const updatedFormData = {\n            ...this.state.form_data\n        };\n\n        const selectedFormElement = {\n            ...updatedFormData[inputIdentifier]\n        }\n        selectedFormElement.value = event.target.value;\n        selectedFormElement.valid = this.onCheckValidity(event.target.value, selectedFormElement.validation);\n        selectedFormElement.touched = true;\n        updatedFormData[inputIdentifier] = selectedFormElement;\n        \n        //\n        let formIsValid = true;\n        for(let key in updatedFormData){\n            formIsValid = updatedFormData[key].valid && formIsValid\n        }\n        \n        this.setState({\n            form_data: updatedFormData,\n            formIsValid: formIsValid\n        });\n    }\n\n    onSubmitHandler = ( event ) => {\n        event.preventDefault();\n        this.props.onAuthentication(this.state.form_data.email.value, this.state.form_data.password.value); \n    }\n\n\n    render() {\n        let formElementArr = [], errorMessage = null;\n\n        for(let key in this.state.form_data){\n            formElementArr.push({\n                id: key,\n                config: this.state.form_data[key]\n            })\n        }\n\n        let form = (\n            <form onSubmit={this.onSubmitHandler}>\n                    {\n                        formElementArr.map(item => (\n                            <Input \n                                key={item.id}\n                                label={item.config.label}\n                                elementType={item.config.elementType}\n                                elementConfig={item.config.elementConfig}\n                                value={item.config.value}\n                                invalid={!item.config.valid}\n                                shouldValidate={item.config.validation}\n                                touched={item.config.touched}\n                                changed={(event) => this.onChangeHandler(event, item.id) }\n                            />\n                        ))\n                    }\n                    <div style={{ textAlign: 'right' }}>\n                       { \n                           this.props.loading ? (\n                               <div> <Spinner /> </div>\n                           ) : (\n                            <Button disabled={!this.state.formIsValid} btnType=\"Primary\" >SUBMIT</Button>\n                           )\n                        } \n                    </div>\n            </form>\n        );\n\n        if(this.props.error){\n            errorMessage = (\n                <ErrorMessage messageType=\"Error\"> {this.props.error.message} </ErrorMessage>\n            )\n        }\n\n        return (\n            <div className={classes.Login}>\n                <h2>Log in</h2>\n                {form}\n                {errorMessage}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuthentication: (email, password) => dispatch( actions.auth(email, password) )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)( withRouter(Login) )  ;","import React from 'react';\nimport classes from './Button.module.css';\n\nconst Button = (props) => {\n    return (\n        <button \n            disabled={props.disabled}\n            className={[classes.Button, classes[props.btnType]].join(' ')}\n            onClick={props.clicked} > {props.children} </button>\n    )\n}\n\nexport default Button;\n","import React from 'react';\nimport classes from './Input.module.css';\n\nconst Input = ( props ) => {\n    let inputElement = null, error_message = null;\n    \n    let inputClasses = [classes.InputElement];\n\n    if(props.invalid && props.shouldValidate && props.touched){\n        inputClasses.push(classes.Invalid)\n    }\n\n    switch(props.elementType){\n\n        case ('input') :\n            inputElement = (\n                <input {...props.elementConfig}\n                    value={props.value}\n                    className={inputClasses.join(' ')} \n                    onChange={props.changed}/>\n            )\n        break;\n\n        default :\n         inputElement = ( <input {...props.elementConfig}\n            value={props.value}\n            className={inputClasses.join(' ')} \n            onChange={props.changed}/> )\n\n\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n            <div style={{textAlign: 'right'}}>\n                <span style={{color: 'red'}} >{error_message}</span>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Input\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__38Sbn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__BWqNs\"};","import React from 'react';\nimport classes from './NavigationItem.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst NavigationItem = (props) => {\n    return (\n        <li className={classes.NavigationItem}>\n            <NavLink exact to={props.link} activeClassName={classes.active}>{props.children}</NavLink>\n        </li>\n    )\n}\n\nexport default NavigationItem\n","import React, { Component } from 'react';\nimport classes from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nclass NavigationItems extends Component {\n   \n\n    render(){\n        let navigations = null;\n\n        if(this.props.isLogin){\n            navigations = (\n                <ul className={classes.NavigationItems}>\n                    <NavigationItem link=\"/\"> Todo </NavigationItem>\n                    <NavigationItem link=\"/logout\"> Logout </NavigationItem>\n                </ul>\n            )\n        }else{\n            navigations = (\n                <ul className={classes.NavigationItems}>\n                    <NavigationItem link=\"/\"> Login </NavigationItem>\n                    <NavigationItem link=\"/register\"> Register </NavigationItem>\n                </ul>\n            )\n        }\n\n        return navigations;\n    }\n    \n}\n\nexport default NavigationItems\n","import React from 'react';\nimport classes from './Logo.module.css';\n\nconst Logo = () => {\n    return (\n        <div className={classes.Logo}>\n            <div>Todo's App</div>\n        </div>\n    )\n}\n\nexport default Logo\n","import React from 'react';\nimport classes from './DrawerToggle.module.css';\n\nconst DrawerToggle = ( props ) => {\n    return (\n        <div className={classes.DrawerToggle} onClick={props.clicked}>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    )\n}\n\nexport default DrawerToggle\n","import React from 'react';\nimport classes from './Toolbar.module.css';\nimport NavigationItems from './../NavigationItems/NavigationItems';\nimport Logo from '../../Logo/Logo';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst Toolbar = (props) => {\n   \n    return (\n        <header className={classes.Toolbar}>\n            <DrawerToggle clicked={props.toggleHandler} />\n            {!props.isShowSideDrawer ? <Logo /> : null } \n            <nav className={classes.DesktopOnly}>\n               <NavigationItems isLogin={props.isLogin} />\n            </nav>\n        </header>\n    )\n}\n\nexport default Toolbar;","import React from 'react';\nimport classes from './Backdrop.module.css';\n\nconst Backdrop = (props) => props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n\nexport default Backdrop\n","import React from 'react'\nimport Logo from '../../Logo/Logo'\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.module.css';\nimport Backdrop from './../../UI/Backdrop/Backdrop';\n\nconst SideDrawer = (props) => {\n    let sideDrawerClasses = [classes.SideDrawer, classes.Close];\n\n    if(props.open){\n        sideDrawerClasses = [classes.SideDrawer, classes.Open]\n    }\n\n    return (\n        <React.Fragment>\n            <Backdrop show={props.open} clicked={props.closed} />\n            <div className={sideDrawerClasses.join(' ')} onClick={props.closed}>\n                <Logo />\n                <nav style={{ marginTop: '20px' }}>\n                    <NavigationItems isLogin={props.isLogin} />\n                </nav>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default SideDrawer\n","import React , {Component } from 'react';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\nimport classes from './Layout.module.css';\n\nclass Layout extends Component {\n    state = {\n        isShowSideDrawer: false\n    }\n\n    sideDrawerCloseHandler = () => {\n        this.setState({ isShowSideDrawer: false })\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState(prevState => {\n            return {\n                isShowSideDrawer: !prevState.isShowSideDrawer\n            }\n        })\n    }\n\n    render() {\n        \n        return(\n            <React.Fragment>\n                <Toolbar \n                    isLogin={this.props.isLogin}\n                    toggleHandler={this.sideDrawerToggleHandler} \n                    isShowSideDrawer={this.state.isShowSideDrawer} />\n                <SideDrawer \n                    isLogin={this.props.isLogin}\n                    open={this.state.isShowSideDrawer}\n                    closed={this.sideDrawerCloseHandler} />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Layout;","import React,  { useEffect, lazy, Suspense, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport Layout from './hoc/Layout/Layout';\nimport { Switch, Route, Redirect  } from 'react-router-dom'\nimport Login from './containers/Auth/Login/Login';\nimport * as actions from './store/actions/index';\nimport Spinner from './components/UI/Spinner/Spinner';\n\nconst AsyncTodo = lazy( () => {\n  return import('./containers/Todo/Todo');\n});\n\nconst AsyncLogout = lazy( () => {\n  return import('./containers/Auth/Logout/Logout');\n});\n\nconst AsyncRegister = lazy( () => {\n  return import('./containers/Auth/Register/Register');\n})\n\n\nconst App = props => {\n\n  const check = useCallback(() => {\n      props.checkAuth()\n  }, [props])\n\n  \n\n  useEffect( () => {\n\n    check()\n\n  }, [])\n\n  \n  let routes = (\n    <Switch>\n        <Route path=\"/\" exact component={Login} />\n        <Route path=\"/register\" render={() => (\n          <Suspense fallback={<div className=\"loading-bottom\"><Spinner /> </div>}> \n            <AsyncRegister /> \n          </Suspense> \n        )} />\n        <Redirect to=\"/\" />\n    </Switch>\n  );\n\n  if(props.auth.isLogin){\n    routes = (\n      <Switch>\n          <Route path=\"/\" exact render={() => (\n            <Suspense fallback={<div className=\"loading-bottom\"><Spinner /> </div>}> \n              <AsyncTodo /> \n            </Suspense>\n          )} />\n          <Route path=\"/logout\" render={() => (\n            <Suspense fallback={<div className=\"loading-bottom\"><Spinner /> </div>}> \n              <AsyncLogout /> \n            </Suspense> \n          )} />\n          <Redirect to=\"/\" />\n      </Switch>\n      );\n  };\n\n  return (\n    <div>\n        <Layout isLogin={props.auth.isLogin}>\n          {routes}\n        </Layout>\n    </div>\n  );\n\n}\n\nconst mapStateToProps = state => {\n    return {\n      auth: state.auth\n    }\n}\n\nconst dispatchStateToProps = dispatch => {\n  return {\n    checkAuth: () => dispatch( actions.authCheckStatus() )\n  }\n}\n\nexport default connect(mapStateToProps, dispatchStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from './../actions/types';\nimport AuthService from './../../services/auth_service';\n\nconst initialState = {\n    currentUser: null,\n    token: null,\n    isLogin: false,\n    loading: false,\n    error: null\n};\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type)\n    {\n        case actionTypes.AUTH_START:\n            return {\n                ...state,\n                loading: true \n            }\n\n        case actionTypes.AUTH_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                currentUser: action.data,\n                token: action.token,\n                isLogin: true,\n                error: null\n            }\n\n        case actionTypes.AUTH_FAIL:\n            return {\n                ...state,\n                currentUser: null,\n                loading: false,\n                error: action.error\n            }\n\n        case actionTypes.CHECK_AUTH:\n                const user = AuthService.getCurrentUser();\n                if(user){\n                    return {\n                        ...state,\n                        isLogin: true,\n                        loading: false\n                    }\n                }\n        \n            return {\n                ...state,\n                isLogin: false,\n                loading: false\n            }\n\n        case actionTypes.LOGOUT_START:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case actionTypes.LOGOUT_SUCCESS:\n            return {\n                ...state,\n                isLogin: false,\n                currentUser: null,\n                loading: false\n            }\n           \n        case actionTypes.LOGOUT_FAIL: \n            return {\n                ...state,\n                isLogin: false,\n                currentUser: null,\n                loading: false,\n                error: action.error\n            }\n            \n        default: \n        return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from './../actions/types';\n\nconst initialState = {\n    todos: [],\n    loading: null,\n    error: null \n}\n\nconst reducer = ( state = initialState, action ) => {\n    switch(action.type)\n    {\n        case actionTypes.TODO_FETCH_START:\n            return {\n                ...state,\n                loading: true,\n                error: null \n            }\n\n        case actionTypes.TODO_FETCH_SUCCESS:\n            const data = action.data.map(item => {\n                return {\n                    ...item,\n                    checked: item.checked === 'yes' ? true : false\n                }\n            })\n            return {\n                ...state,\n                loading: false,\n                error: null,\n                todos: data\n            }\n        \n        case actionTypes.TODO_FETCH_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.error\n            }\n        \n        case actionTypes.TODO_DELETE_START:\n            return {\n                ...state,\n                error: null\n            }\n        \n        case actionTypes.TODO_DELETE_SUCCESS:\n            const updatedTodo = [...state.todos];\n            const filter    = updatedTodo.filter(el => el.id !== action.id );\n            \n            return {\n                ...state,\n                loading: false,\n                error: null,\n                todos: filter\n            }\n        \n        case actionTypes.TODO_DELETE_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.error\n            }\n        \n        case actionTypes.TODO_ADD_START:\n            return {\n                ...state,\n                loading: true,\n                error: null \n            }\n        \n        case actionTypes.TODO_ADD_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                todos: [\n                    ...state.todos, \n                    {...action.data, checked: false }\n                ] \n            }\n\n        case actionTypes.TODO_ADD_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.error\n            }\n        \n        case actionTypes.TODO_CHECKED_START:\n            return {...state}\n\n        case actionTypes.TODO_CHECKED_SUCCESS: \n            const todoIndex = state.todos.findIndex(el => el.id === action.id);\n            let copyTodos   = [...state.todos];\n            \n            copyTodos[todoIndex] = {\n                ...copyTodos[todoIndex],\n                checked: !copyTodos[todoIndex].checked\n            }\n\n            return {\n                ...state,\n                loading: false,\n                todos: copyTodos\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\nimport { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport authReducer from './store/reducers/auth';\nimport todoReducer from './store/reducers/todo';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  todo: todoReducer\n})\n\nconst store = createStore( rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n) )\n\nReactDOM.render(\n    <Provider store={store}>\n      <HashRouter basename=\"/\">\n          <App />\n      </HashRouter>\n    </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}